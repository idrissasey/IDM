/*
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import idm.tp1.StateMachine
import idm.tp1.State

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class MyDslGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		var mysm = resource.contents.get(0) as StateMachine
		mysm.state.forEach[s | fsa.generateFile(s.name+".java", s.toString)]
		mysm.transition.forEach[t | fsa.generateFile(t.name+".java", t.toString)]
	}
	def print(State s) {
		println(s.name)
	}
}
